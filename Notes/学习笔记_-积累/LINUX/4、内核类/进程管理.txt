Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2022-06-14T15:15:53+08:00

====== 进程管理 ======
Created 星期二 14 六月 2022
[[https://blog.csdn.net/zhybiancheng/article/details/120312400|linux进程详解1：进程概念]]

	数据的来源是操作系统中的众多结构体，为了返回有效的数据信息，通过不同的数据结构将结构体组织起来。（先描述，在组织）
	
	
1、基本概念：
	进程：一个执行中程序的实例，__即一个正在执行的程序。__是内核分配资源的基本单位。
	
2、描述进程
	抽象的概念需要一个具体的结构体来进行描述的。进程中的信息就被放在了一个叫做进程控制块(PCB)的结构体中。
	不同的操作系统，进程控制块的名称不同，linux中PCB的名称为：**task_struct**
	当一个程序被加载到内存中要开始执行的时候，操作系统同时会给该进程分配一个PCB，在Linux中就是task_struct这里面包含了所有关于进程的数据信息。__所以CPU对task_struct进行管理就相当于对进程进行管理__

	2.1 task_struct
		是一种数据结构，每个进程都把他的信息放在task_struct中，该数据结构包含：
			标识符：与进程相关的唯一标识符，用来区别其他进程
			状态：进程会有不同的状态，如运行，停止等等
			优先级：相对于其他进程的优先顺序
			程序计数器：程序中即将执行的下一条指令的地址
			内存指针：包括程序代码和进程相关数据的是很
			上下文信息：进程执行时CPU的寄存器中的数据
			IO状态信息： 包括显示的I/O请求，分配给进程的I/O设备和正在被进程使用的文件列表。
			记账信息：可能包括处理器时间总和，使用的时钟总数，时间限制，记账号等
		
		1）进程标识符：描述进程的唯一表示符，区分其他进程。也就是进程的PID，也叫进程号。
			获取PID的方式： 
			[ ] 可以使用怕ps aux查看进程（简单 ps 也能看）__~~ps的使用点这里~~__
			[ ] 在程序里，可以使用getpid()获取进程号，getppid()获取父进程号。
		
		2）进程状态
			{{..\36a1c16a30c046bba186e640086af62a.png}}
		
		3）优先级
			因为CPU资源有限，而进程却有很多个，所以需要优先级这个属性去决定了进程拿到资源的顺序。
		
		4）程序计数器：程序中即将被执行的下一条指令的地址
			取指令-->分析指令-->执行指令。CPU的指令寄存器都会记录下一条指令的地址。
		
		5）内存指针：包括程序代码和进程相关的数据指针，还有和洽谈进程共享的内存块的指针。
		
		6）上下文数据
			通常操作系统内核通过使用  <上下文切换 >  的方式来实现控制流。
			实行这种机制是因为CPU只有一套寄存器，所有只能有将一个进程的存储数据放入寄存器中计算，从而形成了上下文数据。但是同时有多个进程的时候，操作系统为了使得CPU的利用率最高，所以会让进程之间来回的切换，一般进程切换有两种情况。
			1）第一种情况：
				两个执行流在执行事件上与另一个执行流有重叠的部分，称这两个执行流在【并发运行】。一个进程在和其他进程轮流运行成为【多任务】。一个进程执行他的控制流。
				一个进程执行它的控制流的那一段时间叫做 「时间片」。简单来说，每一个进程都会有最多执行的时间限制，如果执行时间超过了时间片，就会自动的退出执行。
				
			2）第二种情况：
				当一个进程的优先级更高时，会抢占当前经常的位置，只要高优先级的进程执行完后才会执行被抢占的进程。这种策略叫【调度】。
				
		7）I/O状态信息：包括显示的IO请求，分配给IO设备和被进程使用的文件列表

3、组织进程
	可以在内核源代码


